name: 🚀 Auto Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 🔧 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 📝 Generate changelog
      id: changelog
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Generate changelog from git commits
        if git tag --list | grep -q "v"; then
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ "$PREV_TAG" ]; then
            CHANGELOG=$(git log $PREV_TAG..HEAD --pretty=format:"- %s" --no-merges)
          else
            CHANGELOG=$(git log --pretty=format:"- %s" --no-merges)
          fi
        else
          CHANGELOG=$(git log --pretty=format:"- %s" --no-merges)
        fi
        
        # Save changelog to file
        echo "## Changes in $VERSION" > RELEASE_CHANGELOG.md
        echo "" >> RELEASE_CHANGELOG.md
        echo "$CHANGELOG" >> RELEASE_CHANGELOG.md
        
        # Also output for GitHub
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        cat RELEASE_CHANGELOG.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: 🏗️ Build distribution packages
      run: |
        python -m pip install build
        python -m build

    - name: 📦 Create release archive
      run: |
        # Create source archive excluding development files
        tar -czf audio2tekst-${{ steps.changelog.outputs.version }}.tar.gz \
          --exclude='.git*' \
          --exclude='__pycache__' \
          --exclude='*.pyc' \
          --exclude='.env*' \
          --exclude='uploads/*' \
          --exclude='logs/*' \
          --exclude='tests/' \
          --exclude='.pytest_cache' \
          --exclude='htmlcov' \          --exclude='*.log' \
          .

    - name: 🎉 Create GitHub Release
      uses: softprops/action-gh-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.changelog.outputs.version }}
        name: Audio2Tekst ${{ steps.changelog.outputs.version }}
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: ${{ contains(steps.changelog.outputs.version, 'alpha') || contains(steps.changelog.outputs.version, 'beta') || contains(steps.changelog.outputs.version, 'rc') }}
        files: ./audio2tekst-${{ steps.changelog.outputs.version }}.tar.gz

  deploy:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: release
    if: ${{ !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc') }}
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 📚 Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
        cname: audio2tekst.alansteinbarth.com
